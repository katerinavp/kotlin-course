package lessons.lesson03.homework

//
class Homework {
    //  1.Название мероприятия
    val name: String = "Monster Hackaton"

    //  2.Дата проведения
    var dateEvent: String = "10 ноября 2025"

    //  3.Место проведения
    var place: String = "New York"

    //  4.Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы.
    private val budget: String = "подробная информация с перечислением поставщиков и сумм для внутреннего пользования"

    //  5.Количество участников
    var members: Int = 0

    //  6. Длительность хакатона
    val time: Int = 48 // hour

    //    Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг.
    private var info: String = "info"

    //    Текущее состояние хакатона (статус)
    val status: String = " not ready"

    //    Список спонсоров
    var sponsor: String = "sponsors"

    //    Бюджет мероприятия
    private val budgetEvent: Int = 100

    //    Текущий уровень доступа к интернету
    val currentInternet: String = "low"

    //    Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки.
    private val logistic: String = " Logistic"

    //    Количество команд
    var countTeam = 0

    //    Перечень задач
    val tasks = 0

    //    План эвакуации
    var plan: String = "plan"

    //    Список доступного оборудования (всё, что выделено для использования на мероприятии)
    val listEquipment: String = "df"

    //    Список свободного оборудования (всё, что можно взять прямо сейчас и что не занято другими участниками)
    var listFreeEquipment: String = "free equipment"

    //    График питания участников (зависит от поставщика питания, определяемого за неделю до начала)
    lateinit var mealSchedule: String

    //    План мероприятий на случай сбоев
    val planOfEvent: String = "plan"

    //    Список экспертов и жюри
    var experts: String = "experts"

    //    Политика конфиденциальности
    val privacy: String = "privcy"

    //    Приватные отзывы (фидбэк) участников и зрителей для анализа проблем.
    private lateinit var review: String

    //    Текущая температура в помещении
    var temperature: Int = 20

    //    Данные мониторинга и анализ производительности сетевого оборудования и интернет-соединения для целей отладки своих приложений командами
    var monitor: String = "monitor"

    //    Регулятор скорости интернета (понижающий коэффициент, например 0.5)
    val speed: Float = 0.5f

    //    Уровень освещения
    var light: Int = 3

    //    Лог событий мероприятия
    lateinit var log: String

    //    Возможность получения медицинской помощи прямо на мероприятии (да/нет)
    val emergency: Boolean = true

    //    Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.
    val plans: String = ""

    //    Регистрационный номер мероприятия
    val regNumber: Int = 44

    //    Максимально допустимый уровень шума в помещении хакатона.
    val max: Int = 8

    //    Индикатор превышения уровня шума в помещениях (превышен или не превышен в данный момент)
    var indicator: Boolean = true

    //    План взаимодействия с прессой
    private val planCommunication: String = ""

    //    Детальная публичная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.
    lateinit var infoProject: String

    //    Статус получения всех необходимых разрешений для проведения мероприятия
    private var statusPermission: Boolean = true

    //    Индикатор доступности специализированного оборудования в данный момент (например, специальному оборудованию)
    var indicatorAccess: Boolean = true

    //    Список партнеров мероприятия
    var partners: String = "partners"
        private set

    //    Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.
    val report: String by lazy { "" }

    //    Внутренние правила распределения призов
    private val rules: String = " "

    //    Список разыгрываемых призов
    val presents: String = "books, tickets, car"

    //    Контактная информация экстренных служб, медицинского персонала и других важных служб, для внутреннего пользования.
    val contactServices: String = ""

    //    Особые условия для участников с ограниченными возможностями
    val terms: String = ""

    //    Общее настроение участников (определяется опросами)
    var mood: String = ""

    //Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия, так как зависит от фактического состава команд и взятых в работу задач.
    lateinit var hackatonPlan: String

    // Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия, но в момент инициализации неизвестно.
    lateinit var nameCelebrity: String

    //    Максимальное количество людей, которое может вместить место проведения.
    val limit: Int = 1000

    //    Количество часов, отведенное каждой команде для работы над проектом.
    val limitTimeForTeam: Int = 8
}